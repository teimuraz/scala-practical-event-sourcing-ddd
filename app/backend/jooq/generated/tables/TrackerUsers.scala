/*
 * This file is generated by jOOQ.
*/
package backend.jooq.generated.tables


import backend.jooq.generated.Indexes
import backend.jooq.generated.Keys
import backend.jooq.generated.Public
import backend.jooq.generated.tables.records.TrackerUsersRecord

import java.lang.Class
import java.lang.Long
import java.lang.String
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import library.jooq.JodaDateTimeConverter

import org.joda.time.DateTime
import org.jooq.Field
import org.jooq.Index
import org.jooq.Name
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.TableImpl

import scala.Array


object TrackerUsers {

  /**
   * The reference instance of <code>public.tracker_users</code>
   */
  val TRACKER_USERS = new TrackerUsers
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.5"
  ),
  comments = "This class is generated by jOOQ"
)
class TrackerUsers(alias : Name, aliased : Table[TrackerUsersRecord], parameters : Array[ Field[_] ]) extends TableImpl[TrackerUsersRecord](alias, Public.PUBLIC, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[TrackerUsersRecord] = {
    classOf[TrackerUsersRecord]
  }

  /**
   * The column <code>public.tracker_users.id</code>.
   */
  val ID : TableField[TrackerUsersRecord, Long] = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), "")

  /**
   * The column <code>public.tracker_users.email</code>.
   */
  val EMAIL : TableField[TrackerUsersRecord, String] = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), "")

  /**
   * The column <code>public.tracker_users.first_name</code>.
   */
  val FIRST_NAME : TableField[TrackerUsersRecord, String] = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR, "")

  /**
   * The column <code>public.tracker_users.last_name</code>.
   */
  val LAST_NAME : TableField[TrackerUsersRecord, String] = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR, "")

  /**
   * The column <code>public.tracker_users.created_at</code>.
   */
  val CREATED_AT : TableField[TrackerUsersRecord, DateTime] = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "", new JodaDateTimeConverter())

  /**
   * The column <code>public.tracker_users.username</code>.
   */
  val USERNAME : TableField[TrackerUsersRecord, String] = createField("username", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), "")

  /**
   * Create a <code>public.tracker_users</code> table reference
   */
  def this() = {
    this(DSL.name("tracker_users"), null, null)
  }

  /**
   * Create an aliased <code>public.tracker_users</code> table reference
   */
  def this(alias : String) = {
    this(DSL.name(alias), backend.jooq.generated.tables.TrackerUsers.TRACKER_USERS, null)
  }

  /**
   * Create an aliased <code>public.tracker_users</code> table reference
   */
  def this(alias : Name) = {
    this(alias, backend.jooq.generated.tables.TrackerUsers.TRACKER_USERS, null)
  }

  private def this(alias : Name, aliased : Table[TrackerUsersRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = Public.PUBLIC

  override def getIndexes : List[ Index ] = {
    return Arrays.asList[ Index ](Indexes.TRACKER_USERS_EMAIL_IDX, Indexes.TRACKER_USERS_EMAIL_KEY, Indexes.TRACKER_USERS_PKEY, Indexes.TRACKER_USERS_USERNAME_IDX, Indexes.TRACKER_USERS_USERNAME_KEY)
  }

  override def getPrimaryKey : UniqueKey[TrackerUsersRecord] = {
    Keys.TRACKER_USERS_PKEY
  }

  override def getKeys : List[ UniqueKey[TrackerUsersRecord] ] = {
    return Arrays.asList[ UniqueKey[TrackerUsersRecord] ](Keys.TRACKER_USERS_PKEY, Keys.TRACKER_USERS_EMAIL_KEY, Keys.TRACKER_USERS_USERNAME_KEY)
  }

  override def as(alias : String) : TrackerUsers = {
    new TrackerUsers(DSL.name(alias), this)
  }

  override def as(alias : Name) : TrackerUsers = {
    new TrackerUsers(alias, this)
  }

  /**
   * Rename this table
   */
  override def rename(name : String) : TrackerUsers = {
    new TrackerUsers(DSL.name(name), null)
  }

  /**
   * Rename this table
   */
  override def rename(name : Name) : TrackerUsers = {
    new TrackerUsers(name, null)
  }
}
