/*
 * This file is generated by jOOQ.
*/
package backend.jooq.generated.tables.records


import backend.jooq.generated.tables.TrackerIssueAssignees

import java.lang.Long

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.5"
  ),
  comments = "This class is generated by jOOQ"
)
class TrackerIssueAssigneesRecord extends UpdatableRecordImpl[TrackerIssueAssigneesRecord](TrackerIssueAssignees.TRACKER_ISSUE_ASSIGNEES) with Record2[Long, Long] {

  /**
   * Setter for <code>public.tracker_issue_assignees.issue_id</code>.
   */
  def setIssueId(value : Long) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.tracker_issue_assignees.issue_id</code>.
   */
  def getIssueId : Long = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_issue_assignees.member_id</code>.
   */
  def setMemberId(value : Long) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.tracker_issue_assignees.member_id</code>.
   */
  def getMemberId : Long = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Long]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record2[Long, Long] = {
    return super.key.asInstanceOf[ Record2[Long, Long] ]
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row2[Long, Long] = {
    super.fieldsRow.asInstanceOf[ Row2[Long, Long] ]
  }

  override def valuesRow : Row2[Long, Long] = {
    super.valuesRow.asInstanceOf[ Row2[Long, Long] ]
  }
  override def field1 : Field[Long] = TrackerIssueAssignees.TRACKER_ISSUE_ASSIGNEES.ISSUE_ID
  override def field2 : Field[Long] = TrackerIssueAssignees.TRACKER_ISSUE_ASSIGNEES.MEMBER_ID
  override def component1 : Long = getIssueId
  override def component2 : Long = getMemberId
  override def value1 : Long = getIssueId
  override def value2 : Long = getMemberId

  override def value1(value : Long) : TrackerIssueAssigneesRecord = {
    setIssueId(value)
    this
  }

  override def value2(value : Long) : TrackerIssueAssigneesRecord = {
    setMemberId(value)
    this
  }

  override def values(value1 : Long, value2 : Long) : TrackerIssueAssigneesRecord = {
    this.value1(value1)
    this.value2(value2)
    this
  }

  /**
   * Create a detached, initialised TrackerIssueAssigneesRecord
   */
  def this(issueId : Long, memberId : Long) = {
    this()

    set(0, issueId)
    set(1, memberId)
  }
}
