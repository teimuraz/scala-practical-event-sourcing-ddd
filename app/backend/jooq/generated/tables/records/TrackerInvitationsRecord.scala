/*
 * This file is generated by jOOQ.
*/
package backend.jooq.generated.tables.records


import backend.jooq.generated.tables.TrackerInvitations

import java.lang.Long
import java.lang.Short

import javax.annotation.Generated

import org.joda.time.DateTime
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.5"
  ),
  comments = "This class is generated by jOOQ"
)
class TrackerInvitationsRecord extends UpdatableRecordImpl[TrackerInvitationsRecord](TrackerInvitations.TRACKER_INVITATIONS) with Record6[Long, Long, Long, Long, DateTime, Short] {

  /**
   * Setter for <code>public.tracker_invitations.id</code>.
   */
  def setId(value : Long) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.tracker_invitations.id</code>.
   */
  def getId : Long = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_invitations.invited_user_id</code>.
   */
  def setInvitedUserId(value : Long) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.tracker_invitations.invited_user_id</code>.
   */
  def getInvitedUserId : Long = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_invitations.organization_id</code>.
   */
  def setOrganizationId(value : Long) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.tracker_invitations.organization_id</code>.
   */
  def getOrganizationId : Long = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_invitations.invited_by_participant_id</code>.
   */
  def setInvitedByParticipantId(value : Long) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.tracker_invitations.invited_by_participant_id</code>.
   */
  def getInvitedByParticipantId : Long = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_invitations.invited_at</code>.
   */
  def setInvitedAt(value : DateTime) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>public.tracker_invitations.invited_at</code>.
   */
  def getInvitedAt : DateTime = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[DateTime]
  }

  /**
   * Setter for <code>public.tracker_invitations.invitation_status</code>.
   */
  def setInvitationStatus(value : Short) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>public.tracker_invitations.invitation_status</code>.
   */
  def getInvitationStatus : Short = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[Short]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Long] = {
    return super.key.asInstanceOf[ Record1[Long] ]
  }

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row6[Long, Long, Long, Long, DateTime, Short] = {
    super.fieldsRow.asInstanceOf[ Row6[Long, Long, Long, Long, DateTime, Short] ]
  }

  override def valuesRow : Row6[Long, Long, Long, Long, DateTime, Short] = {
    super.valuesRow.asInstanceOf[ Row6[Long, Long, Long, Long, DateTime, Short] ]
  }
  override def field1 : Field[Long] = TrackerInvitations.TRACKER_INVITATIONS.ID
  override def field2 : Field[Long] = TrackerInvitations.TRACKER_INVITATIONS.INVITED_USER_ID
  override def field3 : Field[Long] = TrackerInvitations.TRACKER_INVITATIONS.ORGANIZATION_ID
  override def field4 : Field[Long] = TrackerInvitations.TRACKER_INVITATIONS.INVITED_BY_PARTICIPANT_ID
  override def field5 : Field[DateTime] = TrackerInvitations.TRACKER_INVITATIONS.INVITED_AT
  override def field6 : Field[Short] = TrackerInvitations.TRACKER_INVITATIONS.INVITATION_STATUS
  override def component1 : Long = getId
  override def component2 : Long = getInvitedUserId
  override def component3 : Long = getOrganizationId
  override def component4 : Long = getInvitedByParticipantId
  override def component5 : DateTime = getInvitedAt
  override def component6 : Short = getInvitationStatus
  override def value1 : Long = getId
  override def value2 : Long = getInvitedUserId
  override def value3 : Long = getOrganizationId
  override def value4 : Long = getInvitedByParticipantId
  override def value5 : DateTime = getInvitedAt
  override def value6 : Short = getInvitationStatus

  override def value1(value : Long) : TrackerInvitationsRecord = {
    setId(value)
    this
  }

  override def value2(value : Long) : TrackerInvitationsRecord = {
    setInvitedUserId(value)
    this
  }

  override def value3(value : Long) : TrackerInvitationsRecord = {
    setOrganizationId(value)
    this
  }

  override def value4(value : Long) : TrackerInvitationsRecord = {
    setInvitedByParticipantId(value)
    this
  }

  override def value5(value : DateTime) : TrackerInvitationsRecord = {
    setInvitedAt(value)
    this
  }

  override def value6(value : Short) : TrackerInvitationsRecord = {
    setInvitationStatus(value)
    this
  }

  override def values(value1 : Long, value2 : Long, value3 : Long, value4 : Long, value5 : DateTime, value6 : Short) : TrackerInvitationsRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this
  }

  /**
   * Create a detached, initialised TrackerInvitationsRecord
   */
  def this(id : Long, invitedUserId : Long, organizationId : Long, invitedByParticipantId : Long, invitedAt : DateTime, invitationStatus : Short) = {
    this()

    set(0, id)
    set(1, invitedUserId)
    set(2, organizationId)
    set(3, invitedByParticipantId)
    set(4, invitedAt)
    set(5, invitationStatus)
  }
}
