/*
 * This file is generated by jOOQ.
*/
package backend.jooq.generated.tables.records


import backend.jooq.generated.tables.TrackerParticipants

import java.lang.Integer
import java.lang.Long

import javax.annotation.Generated

import org.joda.time.DateTime
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.5"
  ),
  comments = "This class is generated by jOOQ"
)
class TrackerParticipantsRecord extends UpdatableRecordImpl[TrackerParticipantsRecord](TrackerParticipants.TRACKER_PARTICIPANTS) with Record7[Long, Long, Long, DateTime, Long, DateTime, Integer] {

  /**
   * Setter for <code>public.tracker_participants.id</code>.
   */
  def setId(value : Long) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.tracker_participants.id</code>.
   */
  def getId : Long = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_participants.user_id</code>.
   */
  def setUserId(value : Long) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.tracker_participants.user_id</code>.
   */
  def getUserId : Long = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_participants.organization_id</code>.
   */
  def setOrganizationId(value : Long) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.tracker_participants.organization_id</code>.
   */
  def getOrganizationId : Long = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_participants.invited_at</code>.
   */
  def setInvitedAt(value : DateTime) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.tracker_participants.invited_at</code>.
   */
  def getInvitedAt : DateTime = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[DateTime]
  }

  /**
   * Setter for <code>public.tracker_participants.invited_by_participant_id</code>.
   */
  def setInvitedByParticipantId(value : Long) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>public.tracker_participants.invited_by_participant_id</code>.
   */
  def getInvitedByParticipantId : Long = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.tracker_participants.became_member_at</code>.
   */
  def setBecameMemberAt(value : DateTime) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>public.tracker_participants.became_member_at</code>.
   */
  def getBecameMemberAt : DateTime = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[DateTime]
  }

  /**
   * Setter for <code>public.tracker_participants.role</code>.
   */
  def setRole(value : Integer) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>public.tracker_participants.role</code>.
   */
  def getRole : Integer = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Long] = {
    return super.key.asInstanceOf[ Record1[Long] ]
  }

  // -------------------------------------------------------------------------
  // Record7 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row7[Long, Long, Long, DateTime, Long, DateTime, Integer] = {
    super.fieldsRow.asInstanceOf[ Row7[Long, Long, Long, DateTime, Long, DateTime, Integer] ]
  }

  override def valuesRow : Row7[Long, Long, Long, DateTime, Long, DateTime, Integer] = {
    super.valuesRow.asInstanceOf[ Row7[Long, Long, Long, DateTime, Long, DateTime, Integer] ]
  }
  override def field1 : Field[Long] = TrackerParticipants.TRACKER_PARTICIPANTS.ID
  override def field2 : Field[Long] = TrackerParticipants.TRACKER_PARTICIPANTS.USER_ID
  override def field3 : Field[Long] = TrackerParticipants.TRACKER_PARTICIPANTS.ORGANIZATION_ID
  override def field4 : Field[DateTime] = TrackerParticipants.TRACKER_PARTICIPANTS.INVITED_AT
  override def field5 : Field[Long] = TrackerParticipants.TRACKER_PARTICIPANTS.INVITED_BY_PARTICIPANT_ID
  override def field6 : Field[DateTime] = TrackerParticipants.TRACKER_PARTICIPANTS.BECAME_MEMBER_AT
  override def field7 : Field[Integer] = TrackerParticipants.TRACKER_PARTICIPANTS.ROLE
  override def component1 : Long = getId
  override def component2 : Long = getUserId
  override def component3 : Long = getOrganizationId
  override def component4 : DateTime = getInvitedAt
  override def component5 : Long = getInvitedByParticipantId
  override def component6 : DateTime = getBecameMemberAt
  override def component7 : Integer = getRole
  override def value1 : Long = getId
  override def value2 : Long = getUserId
  override def value3 : Long = getOrganizationId
  override def value4 : DateTime = getInvitedAt
  override def value5 : Long = getInvitedByParticipantId
  override def value6 : DateTime = getBecameMemberAt
  override def value7 : Integer = getRole

  override def value1(value : Long) : TrackerParticipantsRecord = {
    setId(value)
    this
  }

  override def value2(value : Long) : TrackerParticipantsRecord = {
    setUserId(value)
    this
  }

  override def value3(value : Long) : TrackerParticipantsRecord = {
    setOrganizationId(value)
    this
  }

  override def value4(value : DateTime) : TrackerParticipantsRecord = {
    setInvitedAt(value)
    this
  }

  override def value5(value : Long) : TrackerParticipantsRecord = {
    setInvitedByParticipantId(value)
    this
  }

  override def value6(value : DateTime) : TrackerParticipantsRecord = {
    setBecameMemberAt(value)
    this
  }

  override def value7(value : Integer) : TrackerParticipantsRecord = {
    setRole(value)
    this
  }

  override def values(value1 : Long, value2 : Long, value3 : Long, value4 : DateTime, value5 : Long, value6 : DateTime, value7 : Integer) : TrackerParticipantsRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this
  }

  /**
   * Create a detached, initialised TrackerParticipantsRecord
   */
  def this(id : Long, userId : Long, organizationId : Long, invitedAt : DateTime, invitedByParticipantId : Long, becameMemberAt : DateTime, role : Integer) = {
    this()

    set(0, id)
    set(1, userId)
    set(2, organizationId)
    set(3, invitedAt)
    set(4, invitedByParticipantId)
    set(5, becameMemberAt)
    set(6, role)
  }
}
