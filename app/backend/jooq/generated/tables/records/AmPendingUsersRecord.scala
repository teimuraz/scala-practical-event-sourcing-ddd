/*
 * This file is generated by jOOQ.
*/
package backend.jooq.generated.tables.records


import backend.jooq.generated.tables.AmPendingUsers

import java.lang.Integer
import java.lang.Long
import java.lang.String

import javax.annotation.Generated

import org.joda.time.DateTime
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.5"
  ),
  comments = "This class is generated by jOOQ"
)
class AmPendingUsersRecord extends UpdatableRecordImpl[AmPendingUsersRecord](AmPendingUsers.AM_PENDING_USERS) with Record10[Long, String, String, String, String, String, String, DateTime, Integer, DateTime] {

  /**
   * Setter for <code>public.am_pending_users.id</code>.
   */
  def setId(value : Long) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.am_pending_users.id</code>.
   */
  def getId : Long = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.am_pending_users.email</code>.
   */
  def setEmail(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.am_pending_users.email</code>.
   */
  def getEmail : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.am_pending_users.username</code>.
   */
  def setUsername(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.am_pending_users.username</code>.
   */
  def getUsername : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.am_pending_users.password</code>.
   */
  def setPassword(value : String) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.am_pending_users.password</code>.
   */
  def getPassword : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.am_pending_users.salt</code>.
   */
  def setSalt(value : String) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>public.am_pending_users.salt</code>.
   */
  def getSalt : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.am_pending_users.first_name</code>.
   */
  def setFirstName(value : String) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>public.am_pending_users.first_name</code>.
   */
  def getFirstName : String = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.am_pending_users.last_name</code>.
   */
  def setLastName(value : String) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>public.am_pending_users.last_name</code>.
   */
  def getLastName : String = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.am_pending_users.created_at</code>.
   */
  def setCreatedAt(value : DateTime) : Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>public.am_pending_users.created_at</code>.
   */
  def getCreatedAt : DateTime = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[DateTime]
  }

  /**
   * Setter for <code>public.am_pending_users.status</code>.
   */
  def setStatus(value : Integer) : Unit = {
    set(8, value)
  }

  /**
   * Getter for <code>public.am_pending_users.status</code>.
   */
  def getStatus : Integer = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>public.am_pending_users.confirmed_at</code>.
   */
  def setConfirmedAt(value : DateTime) : Unit = {
    set(9, value)
  }

  /**
   * Getter for <code>public.am_pending_users.confirmed_at</code>.
   */
  def getConfirmedAt : DateTime = {
    val r = get(9)
    if (r == null) null else r.asInstanceOf[DateTime]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Long] = {
    return super.key.asInstanceOf[ Record1[Long] ]
  }

  // -------------------------------------------------------------------------
  // Record10 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row10[Long, String, String, String, String, String, String, DateTime, Integer, DateTime] = {
    super.fieldsRow.asInstanceOf[ Row10[Long, String, String, String, String, String, String, DateTime, Integer, DateTime] ]
  }

  override def valuesRow : Row10[Long, String, String, String, String, String, String, DateTime, Integer, DateTime] = {
    super.valuesRow.asInstanceOf[ Row10[Long, String, String, String, String, String, String, DateTime, Integer, DateTime] ]
  }
  override def field1 : Field[Long] = AmPendingUsers.AM_PENDING_USERS.ID
  override def field2 : Field[String] = AmPendingUsers.AM_PENDING_USERS.EMAIL
  override def field3 : Field[String] = AmPendingUsers.AM_PENDING_USERS.USERNAME
  override def field4 : Field[String] = AmPendingUsers.AM_PENDING_USERS.PASSWORD
  override def field5 : Field[String] = AmPendingUsers.AM_PENDING_USERS.SALT
  override def field6 : Field[String] = AmPendingUsers.AM_PENDING_USERS.FIRST_NAME
  override def field7 : Field[String] = AmPendingUsers.AM_PENDING_USERS.LAST_NAME
  override def field8 : Field[DateTime] = AmPendingUsers.AM_PENDING_USERS.CREATED_AT
  override def field9 : Field[Integer] = AmPendingUsers.AM_PENDING_USERS.STATUS
  override def field10 : Field[DateTime] = AmPendingUsers.AM_PENDING_USERS.CONFIRMED_AT
  override def component1 : Long = getId
  override def component2 : String = getEmail
  override def component3 : String = getUsername
  override def component4 : String = getPassword
  override def component5 : String = getSalt
  override def component6 : String = getFirstName
  override def component7 : String = getLastName
  override def component8 : DateTime = getCreatedAt
  override def component9 : Integer = getStatus
  override def component10 : DateTime = getConfirmedAt
  override def value1 : Long = getId
  override def value2 : String = getEmail
  override def value3 : String = getUsername
  override def value4 : String = getPassword
  override def value5 : String = getSalt
  override def value6 : String = getFirstName
  override def value7 : String = getLastName
  override def value8 : DateTime = getCreatedAt
  override def value9 : Integer = getStatus
  override def value10 : DateTime = getConfirmedAt

  override def value1(value : Long) : AmPendingUsersRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : AmPendingUsersRecord = {
    setEmail(value)
    this
  }

  override def value3(value : String) : AmPendingUsersRecord = {
    setUsername(value)
    this
  }

  override def value4(value : String) : AmPendingUsersRecord = {
    setPassword(value)
    this
  }

  override def value5(value : String) : AmPendingUsersRecord = {
    setSalt(value)
    this
  }

  override def value6(value : String) : AmPendingUsersRecord = {
    setFirstName(value)
    this
  }

  override def value7(value : String) : AmPendingUsersRecord = {
    setLastName(value)
    this
  }

  override def value8(value : DateTime) : AmPendingUsersRecord = {
    setCreatedAt(value)
    this
  }

  override def value9(value : Integer) : AmPendingUsersRecord = {
    setStatus(value)
    this
  }

  override def value10(value : DateTime) : AmPendingUsersRecord = {
    setConfirmedAt(value)
    this
  }

  override def values(value1 : Long, value2 : String, value3 : String, value4 : String, value5 : String, value6 : String, value7 : String, value8 : DateTime, value9 : Integer, value10 : DateTime) : AmPendingUsersRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this.value10(value10)
    this
  }

  /**
   * Create a detached, initialised AmPendingUsersRecord
   */
  def this(id : Long, email : String, username : String, password : String, salt : String, firstName : String, lastName : String, createdAt : DateTime, status : Integer, confirmedAt : DateTime) = {
    this()

    set(0, id)
    set(1, email)
    set(2, username)
    set(3, password)
    set(4, salt)
    set(5, firstName)
    set(6, lastName)
    set(7, createdAt)
    set(8, status)
    set(9, confirmedAt)
  }
}
