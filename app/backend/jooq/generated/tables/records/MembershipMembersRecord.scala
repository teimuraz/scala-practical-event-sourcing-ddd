/*
 * This file is generated by jOOQ.
*/
package backend.jooq.generated.tables.records


import backend.jooq.generated.tables.MembershipMembers

import java.lang.Integer
import java.lang.Long
import java.lang.String

import javax.annotation.Generated

import org.joda.time.DateTime
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.5"
  ),
  comments = "This class is generated by jOOQ"
)
class MembershipMembersRecord extends UpdatableRecordImpl[MembershipMembersRecord](MembershipMembers.MEMBERSHIP_MEMBERS) with Record5[Long, String, String, Integer, DateTime] {

  /**
   * Setter for <code>public.membership_members.id</code>.
   */
  def setId(value : Long) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.membership_members.id</code>.
   */
  def getId : Long = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Long]
  }

  /**
   * Setter for <code>public.membership_members.name</code>.
   */
  def setName(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.membership_members.name</code>.
   */
  def getName : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.membership_members.email</code>.
   */
  def setEmail(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.membership_members.email</code>.
   */
  def getEmail : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>public.membership_members.role</code>.
   */
  def setRole(value : Integer) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.membership_members.role</code>.
   */
  def getRole : Integer = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>public.membership_members.became_member_at</code>.
   */
  def setBecameMemberAt(value : DateTime) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>public.membership_members.became_member_at</code>.
   */
  def getBecameMemberAt : DateTime = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[DateTime]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Long] = {
    return super.key.asInstanceOf[ Record1[Long] ]
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row5[Long, String, String, Integer, DateTime] = {
    super.fieldsRow.asInstanceOf[ Row5[Long, String, String, Integer, DateTime] ]
  }

  override def valuesRow : Row5[Long, String, String, Integer, DateTime] = {
    super.valuesRow.asInstanceOf[ Row5[Long, String, String, Integer, DateTime] ]
  }
  override def field1 : Field[Long] = MembershipMembers.MEMBERSHIP_MEMBERS.ID
  override def field2 : Field[String] = MembershipMembers.MEMBERSHIP_MEMBERS.NAME
  override def field3 : Field[String] = MembershipMembers.MEMBERSHIP_MEMBERS.EMAIL
  override def field4 : Field[Integer] = MembershipMembers.MEMBERSHIP_MEMBERS.ROLE
  override def field5 : Field[DateTime] = MembershipMembers.MEMBERSHIP_MEMBERS.BECAME_MEMBER_AT
  override def component1 : Long = getId
  override def component2 : String = getName
  override def component3 : String = getEmail
  override def component4 : Integer = getRole
  override def component5 : DateTime = getBecameMemberAt
  override def value1 : Long = getId
  override def value2 : String = getName
  override def value3 : String = getEmail
  override def value4 : Integer = getRole
  override def value5 : DateTime = getBecameMemberAt

  override def value1(value : Long) : MembershipMembersRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : MembershipMembersRecord = {
    setName(value)
    this
  }

  override def value3(value : String) : MembershipMembersRecord = {
    setEmail(value)
    this
  }

  override def value4(value : Integer) : MembershipMembersRecord = {
    setRole(value)
    this
  }

  override def value5(value : DateTime) : MembershipMembersRecord = {
    setBecameMemberAt(value)
    this
  }

  override def values(value1 : Long, value2 : String, value3 : String, value4 : Integer, value5 : DateTime) : MembershipMembersRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this
  }

  /**
   * Create a detached, initialised MembershipMembersRecord
   */
  def this(id : Long, name : String, email : String, role : Integer, becameMemberAt : DateTime) = {
    this()

    set(0, id)
    set(1, name)
    set(2, email)
    set(3, role)
    set(4, becameMemberAt)
  }
}
